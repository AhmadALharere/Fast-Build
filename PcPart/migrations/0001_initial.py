# Generated by Django 3.2.25 on 2025-04-13 09:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Form_Factor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='motherBoard_Socket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='OS',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100)),
                ('price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('mode', models.SmallIntegerField(choices=[(1, 'x32bit'), (2, 'x64bit'), (3, 'x86bit'), (4, 'x128bit'), (5, 'x32bit & x64bit'), (6, 'x64bit & x86bit')], default=2)),
                ('max_memory', models.IntegerField(default=0)),
                ('features', models.TextField(default='')),
                ('population', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('Gid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=200)),
                ('price', models.FloatField()),
                ('population', models.IntegerField(default=0)),
                ('in_storage', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Radiator_size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(default='0', max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='CaseAccessory',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('type', models.CharField(default='', max_length=80)),
                ('features', models.TextField(default='')),
                ('compatibility', models.CharField(default='None', max_length=50)),
                ('form_factor', models.CharField(choices=[('5.25', 5.25), ('3.5', 3.5), ('2.5', 2.5)], default='5.25', max_length=50)),
                ('power_requirement', models.CharField(default='not requirement', max_length=50)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='CaseFan',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('size', models.IntegerField(choices=[(40, '40mm'), (50, '50mm'), (60, '60mm'), (70, '70mm'), (80, '80mm'), (90, '90mm'), (92, '92mm'), (95, '95mm'), (120, '120mm'), (140, '140mm'), (180, '180mm'), (193, '193mm'), (200, '200mm'), (220, '220mm'), (230, '230mm'), (250, '250mm')])),
                ('color', models.CharField(blank=True, default='No Color', max_length=50, null=True)),
                ('fan_type', models.CharField(choices=[('Standard', 'Standard'), ('Static Pressure', 'Static Pressure'), ('High Airflow', 'High Airflow'), ('Silent', 'Silent'), ('RGB/ARGB', 'RGB/ARGB'), ('Slim', 'Slim'), ('Industrial', 'Industrial')], default='Standard', max_length=50)),
                ('compatibility', models.CharField(default='', max_length=100)),
                ('features', models.TextField(default='')),
                ('Lrpm', models.IntegerField(blank=True, default=0, null=True)),
                ('Urpm', models.IntegerField(blank=True, default=0, null=True)),
                ('pwm', models.BooleanField(default=False)),
                ('Lairflow', models.FloatField(blank=True, default=0, null=True)),
                ('Uairflow', models.FloatField(blank=True, default=0, null=True)),
                ('Lnoise_level', models.FloatField(blank=True, default=0, null=True)),
                ('Unoise_level', models.FloatField(blank=True, default=0, null=True)),
                ('rgb_support', models.BooleanField(default=False)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='CpuCooler',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('color', models.CharField(blank=True, default='No Color', max_length=50, null=True)),
                ('size', models.IntegerField(choices=[(40, '40mm'), (50, '50mm'), (60, '60mm'), (70, '70mm'), (80, '80mm'), (90, '90mm'), (92, '92mm'), (95, '95mm'), (120, '120mm'), (140, '140mm'), (180, '180mm'), (193, '193mm'), (200, '200mm'), (220, '220mm'), (230, '230mm'), (250, '250mm')])),
                ('type', models.CharField(choices=[('Air Cooler', 'Air Cooler'), ('Liquid Cooler', 'Liquid Cooler'), ('Passive  Cooler', 'Passive  Cooler'), ('Hybrid Cooler', 'Hybrid Cooler'), ('Sub-Ambient Cooler', 'Sub-Ambient Cooler'), ('Airflow Fan ', 'Airflow Fan'), ('VGA Cooler ', 'VGA Cooler'), ('Chipset Cooler', 'Chipset Cooler'), ('Server Cooler', 'Server Cooler')], default='Air Cooler', max_length=50)),
                ('compatibility', models.CharField(default='', max_length=200)),
                ('cooler_height', models.FloatField(default=0)),
                ('features', models.TextField(default='')),
                ('Lrpm', models.IntegerField(blank=True, default=0, null=True)),
                ('Urpm', models.IntegerField(blank=True, default=0, null=True)),
                ('Lnoise_level', models.FloatField(blank=True, default=0, null=True)),
                ('Unoise_level', models.FloatField(blank=True, default=0, null=True)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='ExternalHardDrive',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('pricePerGB', models.DecimalField(decimal_places=5, max_digits=6)),
                ('features', models.TextField(default='')),
                ('color', models.CharField(default='no color', max_length=50)),
                ('type', models.CharField(choices=[('Portable', 'Portable'), ('Desktop', 'Desktop')], default='Desktop', max_length=50)),
                ('interface', models.CharField(default='', max_length=150)),
                ('capacity', models.IntegerField(default=0)),
                ('max_speed', models.CharField(default='', max_length=50)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='FanController',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('features', models.TextField(default='')),
                ('compatibility', models.CharField(default='', max_length=50)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('channels', models.IntegerField(default=0)),
                ('channelsWattage', models.IntegerField(default=0)),
                ('pwm', models.BooleanField(default=0)),
                ('max_power', models.IntegerField(default=0)),
                ('formFactor', models.CharField(choices=[('5.25', 5.25), ('3.5', 3.5), ('2.5', 2.5)], default='5.25', max_length=50)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='headphones',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('type', models.CharField(choices=[('Circumaural', 'Circumaural'), ('Supra-Aural', 'Supra-Aural'), ('Earbud', 'Earbud'), ('In Ear', 'In Ear')], default='Circumaural', max_length=50)),
                ('LfrequencyResponse', models.IntegerField(default=0)),
                ('UfrequencyResponse', models.IntegerField(default=0)),
                ('microphone', models.BooleanField()),
                ('wireless', models.BooleanField()),
                ('enclosureType', models.CharField(choices=[('Open', 'Open'), ('Closed', 'Closed'), ('Semi-Open', 'Semi-Open')], default='Open', max_length=50)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='InternalHardDrive',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('type', models.CharField(choices=[('HDD SATA', 'HDD SATA'), ('HDD SAS', 'HDD SAS'), ('SSD SATA', 'SSD SATA'), ('SSD SAS', 'SSD SAS'), ('SSD NVMe', 'SSD NVMe'), ('SSD M.2', 'SSD M.2'), ('SSD U.2', 'SSD U.2')], default='HDD SATA', max_length=50)),
                ('interface', models.CharField(default='', max_length=150)),
                ('capacity', models.IntegerField(default=0)),
                ('pricePerGB', models.DecimalField(decimal_places=5, max_digits=6)),
                ('cache', models.IntegerField(default=0)),
                ('formFactor', models.CharField(default='', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Keyboard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('style', models.CharField(default='', max_length=50)),
                ('switches', models.CharField(default='', max_length=50)),
                ('backlit', models.CharField(default='no Back-Light', max_length=50)),
                ('tenkeyless', models.BooleanField()),
                ('connectionType', models.CharField(default='Wired', max_length=50)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Memory',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('generation', models.IntegerField(default=0)),
                ('speed', models.IntegerField(default=0)),
                ('pricePerGB', models.DecimalField(decimal_places=5, max_digits=7)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
                ('unit_number', models.IntegerField(default=0)),
                ('unit_capacity', models.IntegerField(default=0)),
                ('total_capacity', models.IntegerField(default=0)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Monitor',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('screenSize', models.DecimalField(decimal_places=2, max_digits=4)),
                ('resolution', models.CharField(choices=[('640x480', 'VGA'), ('800x600', 'SVGA'), ('1024x768', 'XGA'), ('1280x720', 'HD : 1280x720'), ('1280x800', 'WXGA'), ('1366x768', 'HD : 1366x768'), ('1440x900', 'WXGA+'), ('1600x900', 'HD+'), ('1680x1050', 'WSXGA+'), ('1920x1080', 'Full HD'), ('1920x1200', 'WUXGA'), ('2560x1080', 'UltraWide Full HD'), ('2560x1440', 'QHD / 2K'), ('3440x1440', 'UltraWide QHD'), ('3840x1600', 'UltraWide WQHD+'), ('3840x2160', '4K UHD'), ('5120x1440', 'Super UltraWide'), ('5120x2880', '5K'), ('7680x4320', '8K UHD')], default='1366x768', max_length=50)),
                ('refreshRate', models.IntegerField(default=0)),
                ('responseTime', models.IntegerField(blank=True, null=True)),
                ('aspectRatio', models.CharField(default='', max_length=50)),
                ('panelType', models.CharField(default='', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Mouse',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('tracking_method', models.CharField(choices=[('Optical', 'Optical'), ('Laser', 'Laser'), ('Trackball', 'Trackball'), ('Touchpad', 'Touchpad')], default='Optical', max_length=50)),
                ('max_dpi', models.IntegerField(default=0)),
                ('hand_orientation', models.CharField(choices=[('Both', 'Both'), ('Right', 'Right'), ('Left', 'Left')], default='Right', max_length=50)),
                ('connectionType', models.CharField(choices=[('Wired', 'Wired'), ('Wireless', 'Wireless'), ('Bluetooth Wireless', 'Bluetooth Wireless')], default='Wired', max_length=50)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='OpticalDrive',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('features', models.TextField(default='')),
                ('bd', models.IntegerField(blank=True, default=0, null=True)),
                ('bd_write', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('dvd', models.IntegerField(blank=True, default=0, null=True)),
                ('dvd_write', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('cd', models.IntegerField(blank=True, default=0, null=True)),
                ('cd_write', models.CharField(blank=True, default='', max_length=50, null=True)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='PowerSupply',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('type', models.CharField(choices=[('ATX', 'ATX'), ('SFX', 'SFX')], default='ATX', max_length=50)),
                ('efficiency', models.CharField(choices=[('Plus', 'Plus'), ('Bronze', 'Bronze'), ('Gold', 'Gold'), ('Platinum', 'Platinum'), ('Titanium', 'Titanium')], default='Plus', max_length=50)),
                ('wattage', models.IntegerField(default=0)),
                ('modular', models.CharField(choices=[('Full', 'Full'), ('Semi', 'Semi'), ('False', 'False')], default='False', max_length=50)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
                ('dimensions', models.CharField(default='unknown', max_length=50)),
                ('ATX_24pin_connectors', models.IntegerField(default=0)),
                ('EPS_8pin_connectors', models.IntegerField(default=0)),
                ('PCIe_6_Pls_2pin_connectors', models.IntegerField(default=0)),
                ('SATA_connectors', models.IntegerField(default=0)),
                ('Molex_connectors', models.IntegerField(default=0)),
                ('multi_gpu_support', models.BooleanField()),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='SoundCard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('channels', models.FloatField()),
                ('digital_audio', models.IntegerField(blank=True, null=True)),
                ('snr', models.IntegerField(blank=True, default=0, null=True)),
                ('sample_rate', models.IntegerField(blank=True, default=0, null=True)),
                ('chipset', models.CharField(default='', max_length=50)),
                ('interface', models.CharField(choices=[('PCIe x1', 'PCIe x1'), ('PCIe x2', 'PCIe x2'), ('PCIe x4', 'PCIe x4'), ('PCIe x8', 'PCIe x8'), ('PCIe x16', 'PCIe x16')], default='PCIe x1', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Speakers',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('color', models.CharField(default='no color', max_length=50)),
                ('configuration', models.FloatField()),
                ('wattage', models.IntegerField(default=0)),
                ('Lfrequency_response', models.IntegerField(blank=True, default=0, null=True)),
                ('Ufrequency_response', models.IntegerField(blank=True, default=0, null=True)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='ThermalPaste',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('amountInOne', models.FloatField()),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='VideoCard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('chipset', models.CharField(default='', max_length=100)),
                ('GRAM', models.IntegerField(default=0)),
                ('coreClock', models.FloatField(blank=True, default=0, null=True)),
                ('boostClock', models.FloatField(blank=True, default=0, null=True)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('length', models.IntegerField(default=0)),
                ('interface', models.CharField(choices=[('PCIe x1', 'PCIe x1'), ('PCIe x2', 'PCIe x2'), ('PCIe x4', 'PCIe x4'), ('PCIe x8', 'PCIe x8'), ('PCIe x16', 'PCIe x16')], default='PCIe 4.0', max_length=50)),
                ('power_requirement', models.IntegerField(default=0)),
                ('release_year', models.IntegerField(blank=True, default=0, null=True)),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Webcam',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('resolutions', models.CharField(choices=[('4k', '4k'), ('2k', '2k'), ('1080p', '1080p'), ('720p', '720p'), ('480p', '480p'), ('360p', '360p'), ('240p', '240p')], default='360P', max_length=10)),
                ('connection', models.CharField(default='', max_length=50)),
                ('focus_type', models.CharField(choices=[('Manual', 'Manual'), ('Auto', 'Auto'), ('Fixed', 'Fixed')], default='Manual', max_length=10)),
                ('os', models.CharField(default='', max_length=50)),
                ('fov', models.FloatField()),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='WirelessNetworkCard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('protocol', models.CharField(default='', max_length=50)),
                ('interface', models.CharField(choices=[('PCIe x1', 'PCIe x1'), ('PCIe x2', 'PCIe x2'), ('PCIe x4', 'PCIe x4'), ('PCIe x8', 'PCIe x8'), ('PCIe x16', 'PCIe x16')], default='PCIe x1', max_length=20)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='WiresNetworkCard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('interface', models.CharField(choices=[('PCIe x1', 'PCIe x1'), ('PCIe x2', 'PCIe x2'), ('PCIe x4', 'PCIe x4'), ('PCIe x8', 'PCIe x8'), ('PCIe x16', 'PCIe x16')], default='PCIe x1', max_length=20)),
                ('color', models.CharField(default='no color', max_length=50)),
                ('features', models.TextField(default='')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='MotherBoard',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('color', models.CharField(default='no color', max_length=50)),
                ('additional_features', models.TextField(default='')),
                ('cpu_compatibility', models.CharField(default='', max_length=50)),
                ('max_Memory', models.IntegerField(default=0)),
                ('memory_Slots', models.SmallIntegerField(default=0)),
                ('supported_ddr_version', models.CharField(choices=[('DDR', 'DDR'), ('DDR2', 'DDR2'), ('DDR3', 'DDR3'), ('DDR3L', 'DDR3L'), ('DDR4', 'DDR4'), ('DDR4L', 'DDR4L'), ('DDR5', 'DDR5'), ('LPDDR', 'LPDDR'), ('LPDDR2', 'LPDDR2'), ('LPDDR3', 'LPDDR3'), ('LPDDR4', 'LPDDR4'), ('LPDDR4X', 'LPDDR4X'), ('LPDDR5', 'LPDDR5'), ('LPDDR5X', 'LPDDR5X')], default='DDR4', max_length=10)),
                ('supported_memory_frequencies', models.CharField(default='', max_length=80)),
                ('xmp_support', models.BooleanField()),
                ('memory_channels', models.CharField(choices=[('Single Channel', 'Single Channel'), ('Dual Channel', 'Dual Channel'), ('Quad Channel', 'Quad Channel')], default='Single Channel', max_length=50)),
                ('max_capacity_per_slot', models.IntegerField(default=0)),
                ('m2_slut', models.IntegerField(default=0)),
                ('sata_ports', models.IntegerField(default=0)),
                ('usb_2', models.SmallIntegerField(default=0)),
                ('usb_3', models.SmallIntegerField(default=0)),
                ('usb_C', models.SmallIntegerField(default=0)),
                ('Lan_network', models.CharField(default='', max_length=50)),
                ('wifi_network', models.CharField(default='', max_length=50)),
                ('audio_chipset', models.CharField(default='', max_length=50)),
                ('power_phases', models.SmallIntegerField(default=0)),
                ('fan_headers', models.SmallIntegerField(default=0)),
                ('aio_support', models.BooleanField()),
                ('pci_slots', models.SmallIntegerField(default=0)),
                ('pcie_x1_slots', models.SmallIntegerField(default=0)),
                ('pcie_x4_slots', models.SmallIntegerField(default=0)),
                ('pcie_x8_slots', models.SmallIntegerField(default=0)),
                ('pcie_x16_slots', models.SmallIntegerField(default=0)),
                ('rgb_support', models.BooleanField()),
                ('release_year', models.SmallIntegerField(default=0)),
                ('form_Factor', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='PcPart.form_factor')),
                ('socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PcPart.motherboard_socket')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Cpu',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('release_year', models.IntegerField(default=0)),
                ('core_count', models.IntegerField(default=0)),
                ('core_clock', models.DecimalField(decimal_places=2, max_digits=4)),
                ('boost_clock', models.DecimalField(decimal_places=2, max_digits=4)),
                ('tdp', models.IntegerField(default=0)),
                ('max_memory_support', models.IntegerField(default=2)),
                ('cooling_included', models.BooleanField()),
                ('graphics', models.CharField(blank=True, max_length=100, null=True)),
                ('integrated_graphics', models.BooleanField()),
                ('smt', models.BooleanField()),
                ('socket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PcPart.motherboard_socket')),
            ],
            bases=('PcPart.part',),
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('part_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='PcPart.part')),
                ('type', models.CharField(choices=[('ATX Mid Tower', 'ATX Mid Tower'), ('MicroATX Mini Tower', 'MicroATX Mini Tower'), ('ATX Full Tower', 'ATX Full Tower'), ('MicroATX Mid Tower', 'MicroATX Mid Tower'), ('ATX Desktop', 'ATX Desktop'), ('MicroATX Desktop', 'MicroATX Desktop'), ('ATX Cube', 'ATX Cube'), ('MicroATX Cube', 'MicroATX Cube'), ('ATX HTPC', 'ATX HTPC'), ('MicroATX HTPC', 'MicroATX HTPC'), ('ATX Test Bench', 'ATX Test Bench'), ('MicroATX Test Bench', 'MicroATX Test Bench'), ('ATX Rackmount', 'ATX Rackmount'), ('MicroATX Rackmount', 'MicroATX Rackmount'), ('Mini-ITX Tower', 'Mini-ITX Tower'), ('Mini-ITX Desktop', 'Mini-ITX Desktop'), ('Mini-ITX Cube', 'Mini-ITX Cube'), ('Mini-ITX HTPC', 'Mini-ITX HTPC'), ('Mini-ITX Test Bench', 'Mini-ITX Test Bench'), ('Mini-ITX Rackmount', 'Mini-ITX Rackmount')], default='ATX Mid Tower', max_length=100)),
                ('color', models.CharField(default='Black', max_length=50)),
                ('side_panel', models.CharField(default='normal', max_length=50)),
                ('psu', models.CharField(default='', max_length=50)),
                ('fan_120mm_support', models.IntegerField(default=0)),
                ('fan_140mm_support', models.IntegerField(default=0)),
                ('cpu_cooler_clearance', models.IntegerField(default=0)),
                ('gpu_clearance', models.IntegerField(default=0)),
                ('socket5_25', models.IntegerField(default=0)),
                ('socket3_5', models.IntegerField(default=0)),
                ('socket2_5', models.IntegerField(default=0)),
                ('form_factor_support', models.ManyToManyField(to='PcPart.Form_Factor')),
                ('radiator_support', models.ManyToManyField(to='PcPart.Radiator_size')),
            ],
            bases=('PcPart.part',),
        ),
    ]
